name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NEXT_PUBLIC_STACK_PROJECT_ID: ${{ secrets.STACK_PROJECT_ID }}
  NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY: ${{ secrets.STACK_PUBLISHABLE_CLIENT_KEY }}
  STACK_SECRET_SERVER_KEY: ${{ secrets.STACK_SECRET_SERVER_KEY }}
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
  BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
  CI_SMOKE: "1"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/app
    services:
      postgres:
        image: postgres:16
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "Postgres is ready"; exit 0;
            fi
            echo "Waiting for Postgres..."; sleep 2;
          done
          echo "Postgres did not become ready in time"; exit 1

      - name: Apply schema (Drizzle push)
        run: npx drizzle-kit push --config=drizzle.config.ts

      - name: Seed sponsors data
        run: node scripts/seed-sponsors.mjs

      - name: Lint
        run: npm run lint --silent || true

      - name: Unit tests
        run: npm run test:unit:run

      - name: Install Playwright Browsers (Chromium only)
        run: npx playwright install --with-deps chromium

      - name: E2E tests (Chromium)
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3100
          CI: true
          NEXT_PUBLIC_STACK_PROJECT_ID: ${{ secrets.STACK_PROJECT_ID }}
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: npx playwright test --project=chromium

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: ignore

  smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Static QA checks (anchors/assets)
        run: node scripts/qa-checks.mjs

      - name: Validate ICS
        run: npm run -s test:ics

      - name: Build app
        run: npm run -s build

      - name: Start app (port 3100)
        run: nohup npx next start -p 3100 >/dev/null 2>&1 & echo $! > next.pid

      - name: Wait for server
        run: |
          for i in {1..60}; do
            if curl -sf http://localhost:3100/ >/dev/null; then
              echo "Server is up"; exit 0;
            fi
            sleep 2
          done
          echo "Server failed to start"; exit 1

      - name: Smoke downloads (PDFs + ICS)
        run: node scripts/smoke-downloads.mjs http://localhost:3100

      - name: Smoke public APIs
        run: node scripts/smoke-public-apis.mjs http://localhost:3100

  e2e-smoke-desktop:
    runs-on: ubuntu-latest
    env:
      PLAYWRIGHT_BASE_URL: http://localhost:3100
      CI: true
      NEXT_PUBLIC_STACK_PROJECT_ID: ${{ secrets.STACK_PROJECT_ID }}
      NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY: ${{ secrets.STACK_PUBLISHABLE_CLIENT_KEY }}
      STACK_SECRET_SERVER_KEY: ${{ secrets.STACK_SECRET_SERVER_KEY }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, webkit]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers (all)
        run: npx playwright install --with-deps

      - name: Run Playwright smoke (@smoke) on ${{ matrix.project }}
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3100
          CI: true
          NEXT_PUBLIC_STACK_PROJECT_ID: ${{ secrets.STACK_PROJECT_ID }}
        run: npx playwright test --grep @smoke --project=${{ matrix.project }}

      - name: Upload Playwright report (${{ matrix.project }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.project }}-smoke
          path: playwright-report
          if-no-files-found: ignore

  e2e-smoke-mobile:
    runs-on: ubuntu-latest
    env:
      PLAYWRIGHT_BASE_URL: http://localhost:3100
      CI: true
      NEXT_PUBLIC_STACK_PROJECT_ID: ${{ secrets.STACK_PROJECT_ID }}
      NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY: ${{ secrets.STACK_PUBLISHABLE_CLIENT_KEY }}
      STACK_SECRET_SERVER_KEY: ${{ secrets.STACK_SECRET_SERVER_KEY }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
    strategy:
      fail-fast: false
      matrix:
        project: [mobile-chrome, mobile-safari]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers (all)
        run: npx playwright install --with-deps

      - name: Run Playwright mobile smoke (@smoke) on ${{ matrix.project }}
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3100
          CI: true
          NEXT_PUBLIC_STACK_PROJECT_ID: ${{ secrets.STACK_PROJECT_ID }}
        run: npx playwright test --grep @smoke --project=${{ matrix.project }}

      - name: Upload Playwright report (${{ matrix.project }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.project }}-smoke
          path: playwright-report
          if-no-files-found: ignore
